@page
@{
    ViewData["Title"] = "SubmitRecipe";
}

@section StyleOptional{
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/css/submit-recipe.css" />
    <link rel="stylesheet" href="~/recipepress/css/basic.css" />
    <link rel="stylesheet" href="~/recipepress/css/dropzone.css" />
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            font: 16px Arial;
        }

        /*the container must be positioned relative:*/
        .autocomplete {
            position: relative;
            display: inline-block;
        }

        input {
            border: 1px solid transparent;
            /*background-color: #f1f1f1;*/
            padding: 10px;
            font-size: 16px;
        }

            input[type=text] {
                /*background-color: #f1f1f1;*/
                width: 100%;
            }

            input[type=submit] {
                background-color: DodgerBlue;
                color: #fff;
                cursor: pointer;
            }

        .autocomplete-items {
            position: absolute;
            border: 1px solid #d4d4d4;
            border-bottom: none;
            border-top: none;
            z-index: 99;
            /*position the autocomplete items to be the same width as the container:*/
            top: 100%;
            left: 0;
            right: 0;
        }

            .autocomplete-items div {
                padding: 10px;
                cursor: pointer;
                background-color: #fff;
                border-bottom: 1px solid #d4d4d4;
            }

                /*when hovering an item:*/
                .autocomplete-items div:hover {
                    background-color: #e9e9e9;
                }

        /*when navigating through the items using the arrow keys:*/
        .autocomplete-active {
            background-color: DodgerBlue !important;
            color: #ffffff;
        }
    </style>
}

<div class="recipes-home-body inner-page">
    <div class="container">
        <div class="row">
            <div class="col-md-8 col-lg-9">
                <div class="recipe-set submit-recipe-set">
                    <h2>Đăng công thức</h2>
                    <div class="tab-container tab-shortcode">
                        <ul class="clearfix list-nav">
                            <li class="active" id="congthucBtn"><a href="#">Công thức</a></li>
                            <li id="phanloaiBtn"><a href="#">Phân loại</a></li>
                        </ul>
                        <div class="tabs-container">
                            <div class="tab-content" id="congthuc" style="display: block;">
                                <div class="submit-recipe-form" id="submit-recipe-form">
                                    <input type="hidden" name="recipeId" id="recipeId" value="0" />
                                    <label for="upload-image">Ảnh đại diện cho món ăn*</label>
                                    <span class="error" name="avatarUpload">*Hình đại diện không được để trống</span>
                                    <div class="form-group col-sm-12">
                                        <div class="img-picker" id="coverAvatar" style="display:none"></div>
                                    </div>
                                    <input type="file" name="avatarUpload" data-temp-src="" id="upload-image" required />
                                    <span class="error" name="title">*Tiêu đề không được để trống</span>
                                    <input type="text" name="title" id="title" placeholder="Nhập tên công thức*" required />
                                    <br />
                                    <span class="error" name="content">*Nội dung không được để trống</span>
                                    <textarea name="content" id="recipe-content" cols="30" rows="10" placeholder="Nhập nội dung công thức*" required></textarea>
                                    <label class="col-md-3 custom-label-submit">Số khẩu phần ăn*</label>
                                    <input type="number" name="serving" id="serving" placeholder="Serving" value="1" required />
                                    <br />
                                    <label class="col-md-3 custom-label-submit">Thời gian nấu (phút)*</label>
                                    <input type="number" name="cooktime" id="cooktime" placeholder="Cook time" value="1" required />
                                    <br />
                                    <div class="form-group">
                                        <label class="col-md-3 custom-label-submit">Độ khó*</label>
                                        <select name="level" id="level" class="form-control">
                                            <option value="1">Dễ</option>
                                            <option value="2">Trung bình</option>
                                            <option value="3">Khó</option>
                                        </select>
                                    </div>
                                    @*<input type="number"  placeholder="Level" value="1" required />*@
                                    <fieldset class="ingredient-set">
                                        <label for="ingredients">Nguyên liệu</label> </br>
                                        <span class="error" name="ingredients">*Nguyên liệu không được để trống</span>
                                        <ul class="list-sortable ingredients-list">
                                            <li>
                                                <div class="add-fields">
                                                    <span class="ingredient-handler-list handler-list">
                                                        <i class="fa fa-arrows"></i>
                                                    </span>
                                                    <div class="autocomplete">
                                                        <input class="ingredient-detail"autocomplete="off" type="text" name="ingredients" id="ingredients1" data-suggest-quantitivie="ingredientsWeight1"
                                                               onclick="SuggestIngredient(this);" placeholder="Muối, Đường, thịt gà ..." />
                                                    </div>
                                                    <input class="ingredient-weight" type="text" name="ingredientsWeight" id="ingredientsWeight1" placeholder="1g, 1kg, 1 thìa ..." />
                                                    <input type="hidden" name="ingredientId" value="0" />
                                                    <span class="del-list">
                                                        <i class="fa fa-trash"></i>
                                                    </span>
                                                </div>
                                            </li>
                                        </ul>
                                        <span class="add-ingredient">
                                            <i class="fa fa-plus"></i>
                                        </span>
                                    </fieldset>
                                    <fieldset class="ingredient-set">
                                        <label for="steps">Steps</label> <br />
                                        <span class="error" name="stepsDes">*Các bước không được để trống</span>
                                        <ul class="list-sortable steps">
                                            <li>
                                                <div class="add-fields">
                                                    <span class="handler-list">
                                                        <i class="fa fa-arrows"></i>
                                                    </span>
                                                    <textarea class="short-text" name="stepsDes" id="stepsDes1" cols="30" rows="10">    </textarea>
                                                    <input type="hidden" name="stepsId" value="0" />
                                                    <span class="del-list">
                                                        <i class="fa fa-trash"></i>
                                                    </span>
                                                </div>
                                                <div class="add-fields" style="margin-top: 20px">
                                                    <textarea class="short-text" name="stepsTips" id="stepsTips1" cols="30" rows="10" placeholder="Mẹo nhỏ cho bước này (có thể bỏ qua)"></textarea>
                                                </div>
                                                <form action="/file-upload" class="dropzone drop-zone-form" id="myAwesomeDropzone1">
                                                    <div class="fallback">
                                                        <input name="file" type="file" multiple />
                                                    </div>
                                                </form>
                                            </li>
                                        </ul>
                                        <span class="add-recipe-steps">
                                            <i class="fa fa-plus"></i>
                                        </span>
                                    </fieldset>
                                    <input type="text" name="videoCode" id="video-code" placeholder="Video Code" class="input-video" />
                                    <div class="text-center">
                                        <button type="button" id="nextBtn" class="recipe-submit-btn">Bước tiếp theo</button>
                                    </div>

                                </div>
                            </div>
                            <div class="tab-content" id="phanloai" style="display: none;">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 col-lg-3">
                <aside>
                    <div class="side-bar">
                        <!--recipes search widget-->
                        <div class="widget recipe-search">

                            <div class="category-list">
                                <!--<div class="list-inner">-->
                                <ul id="list-category-item"></ul>
                                <!--</div>-->
                            </div>
                        </div>
                        <!--recipes search widget ends-->
                        <!--popular recipes widget-->
                        <div class="widget latest-news-widget">
                            <h2>Công thức thịnh hành</h2>
                            <ul id="list-popular-recipe-widget"></ul>
                        </div>
                        <!--popular recipes widget ends-->
                        <div class="widget">
                            <a href="#">
                                <img src="~/recipepress/images/temp-images/add-side.jpg" alt="Add" />
                            </a>
                        </div>
                        <!--latest news widget-->
                        <div class="widget latest-news-widget">
                            <h2>Công thức mới nhất</h2>
                            <ul id="list-latest-recipe-widget"></ul>
                        </div>
                        <!--latest news widget ends-->
                        <!--get social-->
                        <div class="widget widget-get-social">
                            <h2>Liên kết xã hội</h2>
                            <ul>
                                <li class="facebook">
                                    <a href="#">
                                        <i class="fa fa-facebook"></i>
                                        <span class="count">23.5K</span>
                                        <span class="count-type">Likes</span>
                                    </a>
                                </li>
                                <li class="twitter">
                                    <a href="#">
                                        <i class="fa fa-twitter"></i>
                                        <span class="count">23.5K</span>
                                        <span class="count-type">Likes</span>
                                    </a>
                                </li>
                                <li class="google-plus">
                                    <a href="#">
                                        <i class="fa fa-google-plus"></i>
                                        <span class="count">23.5K</span>
                                        <span class="count-type">Likes</span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                        <!--get social ends-->
                    </div>
                </aside>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        var authorization = JSON.parse(localStorage.getItem('authorization'));
        if (authorization == null) {
            window.location.href = "/login";
        }
    </script>
    <script src="~/recipepress/js/sweetalertv1.js"></script>
    <script type="text/javascript" src="recipepress/js/main.js"></script>
    @*<script type="text/javascript" src="~/recipepress/js/custom.js"></script>*@
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <script src="https://static.filestackapi.com/filestack-js/1.x.x/filestack.min.js"></script>


    <script type="text/javascript" src="~/recipepress/js/dropzone.js"></script>
    @*<script type="text/javascript" src="~/recipepress//js/dropzone-amd-module.js"></script>*@
    <script src="https://www.gstatic.com/firebasejs/5.8.4/firebase.js"></script>
    <script src="~/js/notification.js"></script>
    <script src="~/js/Configuration.js"></script>
    <script type="text/javascript">

        async function saveDraft(isSystemSaveDraft) {
            if (!isSystemSaveDraft) $("#loading-box").show();
            var currentDraftedRecipe = JSON.parse(window.localStorage.getItem("darftedRecipe"));
            var results = getData(currentDraftedRecipe, true);
            var data = results.data;
            data.recipeVM.SaveDraft = true;
            data.recipeVM.Id = $("#recipeId").val() ? $("#recipeId").val() : 0;

            var authorization = localStorage.getItem("authorization");
            var token = (JSON.parse(authorization))["token"];
            fetch(`${BASE_API_URL}/api/recipe/save-draft?recipeId=${data.recipeVM.Id}`, {
                method: "PUT",
                body: JSON.stringify(data),
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                }
            }).then(async (res) => {
                $("#loading-box").hide();
                if (res.status === 200) {
                    if (!isSystemSaveDraft) {
                        swal({
                            title: "",
                            text: "Bạn đã lưu nháp công thức thành công",
                            type: "success",
                            confirmButtonColor: "#DD6B55",
                            confirmButtonText: "Xác nhận",
                            closeOnConfirm: false
                        });
                        setTimeout(async function () {
                            var data = (await res.json());
                            recipeId = data.recipeId;
                            var username = localStorage.getItem("username");
                            window.location.href = `/account/savedraft/${username}`
                            window.localStorage.removeItem("darftedRecipe");
                        }, 1500);
                    }
                    else {
                        var data = (await res.json());
                        for (var item of data.recipe) {
                            $("#recipeId").val(item.id);
                            var ingredientIds = $("input[name='ingredientId']");
                            var stepIds = $("input[name='stepsId']");
                            $(ingredientIds).each(i => {
                                $(ingredientIds[i]).val(item.listIngredient[i].id)
                            });
                            $(stepIds).each(i => {
                                $(stepIds[i]).val(item.listSORVM[i].id)
                            })
                        }
                    }

                }
            }).catch(function (e) {
                $("#loading-box").hide();
            })
        };

        async function submitRecipe() {
            $("#loading-box").show();
            var currentDraftedRecipe = JSON.parse(window.localStorage.getItem("darftedRecipe"));
            var results = getData(currentDraftedRecipe, false);
            var data = results.data;
            console.log(results)
            if (results.validation === false) {
                window.scrollTo(0, 400);
                $("#congthucBtn").click();
                swal({
                    type: 'error',
                    title: 'Thông báo',
                    text: 'Các nội dung không được để trống!',
                });
                $("#loading-box").hide();
                return;
            } else {
                var data = results.data;
                data.recipeVM.SaveDraft = false;
                data.recipeVM.Id = $("#recipeId").val() ? $("#recipeId").val() : 0;
                //data = await uploadImageSubmit(data);
                var recipeId;
                var authorization = localStorage.getItem("authorization");
                var token = (JSON.parse(authorization))["token"];
                await fetch(`${BASE_API_URL}/api/recipe/submit-recipe?recipeId=${data.recipeVM.Id}`, {
                    method: "PUT",
                    //body: JSON.stringify({ request: data }),
                    body: JSON.stringify(data),
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    }
                }).then(async (res) => {
                    $("#loading-box").hide();
                    var uid;
                    var myDataRef;
                    if (res.status === 200) {
                        swal({
                            title: "",
                            text: "Bạn đã chia sẻ công thức mới thành công",
                            type: "success",
                            confirmButtonColor: "#DD6B55",
                            confirmButtonText: "Xác nhận",
                            closeOnConfirm: false
                        });
                        setTimeout(async function () {
                            var data = (await res.json());
                            recipeId = data.recipeId;
                            var resUser = await fetch(`${BASE_API_URL}/api/account/read-userinfo`, {
                                method: "GET",
                                headers: {
                                    'Content-Type': 'application/json',
                                    'Authorization': `Bearer ${token}`
                                }
                            });
                            var userData = await resUser.json();

                            var usernameLocal = window.localStorage.getItem("username");//người đang comment
                            var userRes = await fetch(`${BASE_API_URL}/${USER_FOLLOWING_API_URL}/read-user-following-me?userName=${usernameLocal}`);
                            var dataUser = await userRes.json();
                            for (var user of dataUser) {
                                var followingMe = user.username;//thông báo cho người đang theo dõi tôi
                                myDataRef = firebase.database().ref(followingMe);
                                uid = myDataRef.push({
                                    "uid": "",
                                    "username": userInfo.lastName + " " + userInfo.firstName,
                                    "content": "đã chia sẻ công thức mới",
                                    "date": new Date().toLocaleString(),
                                    "link": "/recipe/" + recipeId,
                                    "isRead": "False"
                                });
                                SRSN.FIREBASE_DATABASE.ref('/' + followingMe + "/" + uid.key).update({
                                    "uid": uid.key
                                });
                                //update count notifi
                                var countNoti = 0;
                                var countDataRef = SRSN.FIREBASE_DATABASE.ref(followingMe);

                                countDataRef.once('value', function (snapshot) {
                                    countNoti = snapshot.val().numberOfLatestNotis;
                                    countNoti++;
                                    SRSN.FIREBASE_DATABASE.ref(followingMe).update({ "numberOfLatestNotis": countNoti });
                                });
                            }
                            //thông báo công điểm cho chính user
                            var usernameLocal = window.localStorage.getItem("username");//người đang đăng công thức
                            myDataRef = firebase.database().ref(usernameLocal);
                            if (myDataRef != null) {
                                uid = myDataRef.push({
                                    "uid": "",
                                    "username": "Bạn",
                                    "content": "đã chia sẻ công thức mới và được cộng thêm <b>10 điểm</b>",
                                    "date": new Date().toLocaleString(),
                                    "link": "/recipe/" + recipeId,
                                    "isRead": "False"
                                });
                                //update uid into firebase
                                SRSN.FIREBASE_DATABASE.ref("/" + usernameLocal + "/" + uid.key).update({
                                    "uid": uid.key
                                });
                                //update count notifi
                                var countNoti = 0;
                                var countDataRef = SRSN.FIREBASE_DATABASE.ref(usernameLocal);
                                countDataRef.once('value', function (snapshot) {
                                    countNoti = snapshot.val().numberOfLatestNotis;
                                    countNoti++;
                                    SRSN.FIREBASE_DATABASE.ref(usernameLocal).update({ "numberOfLatestNotis": countNoti });
                                });
                            }
                            window.location.href = `/recipe/${recipeId}`
                            window.localStorage.removeItem("darftedRecipe");
                        }, 1500);
                    }
                })
                    .catch(function (e) {
                        $("#loading-box").hide();
                    });
            }
        }
    </script>
    <script src="~/js/submit-recipe.js"></script>
    <script src="~/js/menu-widgets.js"></script>

    <script type="text/javascript">
        async function SuggestIngredient(e) {
            var res = await fetch(`${BASE_API_URL}/api/ingredients/read-ingredients`);
            var ingredients = await res.json();
            var arrayingreName = new Array();;
            if (ingredients.length > 0) {
                for (var item of ingredients) {
                    arrayingreName.push(item.ingredientName)

                }
                autocomplete(document.getElementById(`${e.id}`), ingredients);
            }
        }
        function autocomplete(inp, arr) {
            var currentFocus;
            var item = inp.getAttribute("data-suggest-quantitivie");
            inp.addEventListener("input", function (e) {
                var a, b, i, val = this.value;
                closeAllLists();
                if (!val) { return false; }
                currentFocus = -1;
                a = document.createElement("DIV");
                a.setAttribute("id", this.id + "autocomplete-list");
                a.setAttribute("class", "autocomplete-items");
                this.parentNode.appendChild(a);
                for (i = 0; i < arr.length; i++) {
                    if (arr[i].ingredientName.substr(0, val.length).toUpperCase() == val.toUpperCase()) {
                        b = document.createElement("DIV");
                        b.innerHTML = "<strong>" + arr[i].ingredientName.substr(0, val.length) + "</strong>";
                        b.innerHTML += arr[i].ingredientName.substr(val.length);
                        b.innerHTML += `<input type='hidden' name="${arr[i].suggestQuantitive}" id='${arr[i].id}' value='${arr[i].ingredientName}'>`;
                        b.addEventListener("click", function (e) {
                            inp.value = this.getElementsByTagName("input")[0].value;
                            $(`input[id='${item}']`).val(e.currentTarget.childNodes[2].name);
                            closeAllLists();
                        });
                        a.appendChild(b);
                    }
                }
            });
            inp.addEventListener("keydown", function (e) {
                var x = document.getElementById(this.id + "autocomplete-list");
                if (x) x = x.getElementsByTagName("div");
                if (e.keyCode == 40) {
                    currentFocus++;
                    addActive(x);
                } else if (e.keyCode == 38) {
                    currentFocus--;
                    addActive(x);
                } else if (e.keyCode == 13) {
                    e.preventDefault();
                    if (currentFocus > -1) {
                        if (x) x[currentFocus].click();
                    }
                }
            });
            function addActive(x) {
                if (!x) return false;
                removeActive(x);
                if (currentFocus >= x.length) currentFocus = 0;
                if (currentFocus < 0) currentFocus = (x.length - 1);
                x[currentFocus].classList.add("autocomplete-active");
            }
            function removeActive(x) {
                for (var i = 0; i < x.length; i++) {
                    x[i].classList.remove("autocomplete-active");
                }
            }
            function closeAllLists(elmnt) {
                var x = document.getElementsByClassName("autocomplete-items");
                for (var i = 0; i < x.length; i++) {
                    if (elmnt != x[i] && elmnt != inp) {
                        x[i].parentNode.removeChild(x[i]);
                    }
                }
            }
            document.addEventListener("click", function (e) {
                closeAllLists(e.target);
            });
        }
        const changeHeadername = async () => {
            var someText = "Đăng công thức";
            $('.main-heading h1').append(document.createTextNode(someText));
        };
        (async () => {
            await changeHeadername();
            if (JSON.parse(window.localStorage.getItem("darftedRecipe")) == null) {
                await dropzoneForm('myAwesomeDropzone1');
            }
            await callLatestRecipeWidgetApi();
            await callListCategoryItem();
            await callPopularRecipeWidgetApi();
            await loadCategory();
            await RedirectAPI();
            $('#submitBtn').on("click", async function (event) {
                swal("Bạn chắc chắn muốn công khai công thức?", {
                    buttons: {
                        cancel: "Quay về",
                        draft: {
                            text: "Lưu nháp",
                            value: "draft",
                        },
                        submit: {
                            text: "Công khai",
                            value: "submit",
                        },
                    },
                })
                    .then((value) => {
                        switch (value) {
                            case "submit":
                                submitRecipe();
                                break;
                            case "draft":
                                saveDraft(false);
                                break;
                            case "cancel":
                                break;

                        }
                    });
            });
        })();


    </script>
}
