@page "/recipe/{recipe_id}"
@model SRSN.Client_View.Pages.Recipe_DetailModel
@{
    ViewData["Title"] = "Recipe_Detail";
}
<!--banner ends-->
@section StyleOptional{
    <link rel="stylesheet" href="/recipepress/css/plugins.min.css">

    <!-- ==== Main Stylesheet ==== -->
    @*<link rel="stylesheet" href="/recipepress/css/style.css">*@

    <!-- ==== Responsive Stylesheet ==== -->
    <link rel="stylesheet" href="/recipepress/css/responsive-style.css">

    <!-- ==== Color Scheme Stylesheet ==== -->
    <link rel="stylesheet" href="/recipepress/css/colors/color-1.css" id="changeColorScheme">

    <!-- ==== Custom Stylesheet ==== -->
    <link rel="stylesheet" href="/recipepress/css/custom.css">

}
<div class="recipes-home-body inner-page">
    <div class="container">
        <div class="row">
            <div class="col-md-8 col-lg-9">
                <div class="recipe-set ">
                    <div class="wrapper-detail-contents detail-2" id="error" style="display: none"><h2 style="color: red">Công thức không tồn tại!</h2></div>
                    <div class="wrapper-detail-contents detail-2" id="content" style="display: block">
                        <div class="single-recipe-detail" id="banner-recipe">
                        </div>
                        <div class="recipe-detail-body">
                            <div id="content-recipe">
                                <!--Content-->
                            </div>
                            <br />
                            <div class="ingredients-checkbox">
                                <div class="ingredients">
                                    <h3>Nguyên liệu</h3>

                                    <ul id="list-of-ingredients"></ul>
                                    <div class="col-md-12">
                                        <a id="btn-suggest-ingredients" class="default-btn mid-button theme-color pull-right">Cửa hàng gần nhất</a>
                                    </div>
                                </div>
                            </div>
                            <div class="recipe-steps">
                                <h3 class="lined">Các bước thực hiện</h3>
                                <dl class="accordion clearfix" id="list-step-recipe"></dl>
                            </div>
                            <div class="separator-post"></div>
                            <div class="tags-icons">
                                <div class="row">
                                    <div class="col-sm-7">
                                        <div class="details-tags">
                                            <ul id="list-category-item-tags"></ul>
                                        </div>
                                    </div>
                                    <div class="col-sm-5">
                                        <div class="details-social-icons">
                                            <a href="javascript:void(0)" title="Like" class="like-button">
                                                <i class=" fa fa-2x fa-heart-o" onclick="toggleLikeButton(this)" id="like-heart"></i>
                                            </a>
                                            <a id="btn-share-recipe" title="Chia sẻ"><i class="fa fa-2x fa-share"></i></a>
                                            <a id="btn-add-collection" title="Thêm vào BST"><i class="fa fa-2x fa-plus"></i></a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="about-chef"></div>
                        <div class="recipe-set" id="suggest-recipe">
                            <h3 class="lined" id="title-maybe-like">
                                Có thể bạn thích
                            </h3>
                            <div class="boxed-recipes text-center" id="list-suggest-recipe">

                            </div>
                        </div>
                        <div class="related-recipes">
                            <h3 class="lined">Công thức khác của người nấu</h3>
                            <div class="boxed-recipes text-center" id="list-related-recipe">

                            </div>
                        </div>

                        <div class="recipe-comments">
                            <h3 class="lined">Bình Luận (<span id="numOfComment"></span>)</h3>
                            <ul id="list-rating-comment"></ul>
                        </div>

                        <div class="comment-form">
                            <h3 class="lined">Viết bình luận</h3>

                            <div class="form-rating">
                                <div class="form-rating-recipe">

                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="col-md-3 rating-title">Đánh giá công thức</div>
                                        <div class="col-md-8">
                                            <fieldset class="rating-recipe">
                                                <input type="radio" id="star5" name="rating" value="5" /><label class="full" for="star5" title="Awesome - 5 stars"></label>
                                                <input type="radio" id="star4half" name="rating" value="4.5" /><label class="half" for="star4half" title="Pretty good - 4.5 stars"></label>
                                                <input type="radio" id="star4" name="rating" value="4" /><label class="full" for="star4" title="Pretty good - 4 stars"></label>
                                                <input type="radio" id="star3half" name="rating" value="3.5" /><label class="half" for="star3half" title="Meh - 3.5 stars"></label>
                                                <input type="radio" id="star3" name="rating" value="3" /><label class="full" for="star3" title="Meh - 3 stars"></label>
                                                <input type="radio" id="star2half" name="rating" value="2.5" /><label class="half" for="star2half" title="Kinda bad - 2.5 stars"></label>
                                                <input type="radio" id="star2" name="rating" value="2" /><label class="full" for="star2" title="Kinda bad - 2 stars"></label>
                                                <input type="radio" id="star1half" name="rating" value="1.5" /><label class="half" for="star1half" title="Meh - 1.5 stars"></label>
                                                <input type="radio" id="star1" name="rating" value="1" /><label class="full" for="star1" title="Sucks big time - 1 star"></label>
                                                <input type="radio" id="starhalf" name="rating" value="0.5" /><label class="half" for="starhalf" title="Sucks big time - 0.5 stars"></label>
                                            </fieldset>
                                        </div>
                                    </div>
                                    <div class="col-md-12">
                                        <textarea name="comment" id="comment"
                                                  placeholder="Bình luận:
                                                          * Mẹo: Nội dung đánh giá phải mang tính chất khách quan, từ chia sẻ đánh giá của bạn sẽ giúp rất nhiều cho người dùng có quyết định lựa chọn đúng đắn."></textarea>
                                    </div>
                                </div>

                                <button class="submit-comment">Đánh giá</button>

                            </div>
                        </div>
                        <div class="modal fade" id="myModal" role="dialog">
                            <div class="modal-dialog">

                                <!-- Modal content-->
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                                        <h4 class="modal-title">Gửi phản hồi về công thức này</h4>
                                    </div>
                                    <div class="modal-body">
                                        <form style="display:flex; flex-direction:column;" method="post" id="report-recipe-form">
                                            <label for="reportDescription">Mô tả</label>
                                            <textarea class="form-text text-muted" id="reportDescription" placeholder="Nhập mô tả" aria-describedby="description"></textarea>
                                            <small id="emailHelp" class="form-text text-muted">Hãy cho chúng tôi biết lý do bạn tố cáo công thức này</small>
                                            <div>
                                                <button type="button" class="btn btn-default" data-dismiss="modal">Hủy</button>
                                                <button type="submit" class="btn btn-default">Gửi phản hồi</button>
                                            </div>
                                        </form>
                                    </div>

                                </div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
            <div class="col-md-4 col-lg-3">
                <aside>
                    <div class="side-bar">
                        <!--recipes search widget-->
                        <div class="widget recipe-search">

                            <div class="category-list">
                                <!--<div class="list-inner">-->
                                <ul id="list-category-item"></ul>
                                <!--</div>-->
                            </div>
                        </div>
                        <!---recipes search widget ends-->
                        <!--popular recipes widget-->
                        <div class="widget latest-news-widget">
                            <h2>Công thức thịnh hành</h2>
                            <ul id="list-popular-recipe-widget"></ul>
                        </div>
                        <!--popular recipes widget ends-->
                        <div class="widget">
                            <a href="#">
                                <img src="/recipepress/images/temp-images/add-side.jpg" alt="Add" />
                            </a>
                        </div>
                        <!--latest news widget-->
                        <div class="widget latest-news-widget">
                            <h2>Công thức mới nhất</h2>
                            <ul id="list-latest-recipe-widget"></ul>
                        </div>
                        <!--latest news widget ends-->
                        <!--get social-->
                        <div class="widget widget-get-social">
                            <h2>Liên kết cộng đồng</h2>
                            <ul>
                                <li class="facebook">
                                    <a href="#">
                                        <i class="fa fa-facebook"></i>
                                        <span class="count">23.5K</span>
                                        <span class="count-type">Likes</span>
                                    </a>
                                </li>
                                <li class="twitter">
                                    <a href="#">
                                        <i class="fa fa-twitter"></i>
                                        <span class="count">23.5K</span>
                                        <span class="count-type">Likes</span>
                                    </a>
                                </li>
                                <li class="google-plus">
                                    <a href="#">
                                        <i class="fa fa-google-plus"></i>
                                        <span class="count">23.5K</span>
                                        <span class="count-type">Likes</span>
                                    </a>
                                </li>

                            </ul>
                        </div>

                        <!--get social ends-->
                    </div>
                </aside>

            </div>
        </div>

    </div>
    <!-- The Modal -->
    <div id="modal-suggest-ingredients" class="modal">
        <!-- Modal content -->
        <div class="row modal-content">
            <div class="col-md-12 modal-header">
                <span id="close-modal-suggest" class="close">&times;</span>
            </div>
            <div class="col-md-12 modal-body">
                <div class="col-md-5">

                    <div class="modal-component-1" id="modal-products">
                        <div class="email-field box-search-ingre col-md-6">
                            <input onkeyup="filterIngredients()" id="filter-ingredient" type="text" placeholder="Tìm kiếm">
                            <button><i class="fa fa-search"></i></button>
                        </div>
                        <div class="col-md-6 checkbox-position">
                            <label>
                                <input type="checkbox" name="currentPosition" /> Vị trí hiện tại của bạn
                            </label>
                        </div>
                        <div class=" col-md-12 checked-ingre-box">
                            <ul id="modal-list-item" class="modal-list-product-item"></ul>
                        </div>
                    </div>
                </div>
                <div class="col-md-7">
                    <div class="modal-component-2">
                        <div id="map"></div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <div id="modal-share-recipe" class="modal">
        <!-- Modal content -->
        <div class="row modal-content modal-share-content">
            <div class="col-md-12 modal-header">
                <span id="close-share-recipe" class="close">&times;</span>
            </div>
            <div class="col-md-12 modal-body" id="modal-body-share-recipe">
            </div>
        </div>

    </div>
    <div id="modal-add-collection" class="modal">
        <!-- Modal content -->
        <div class="row modal-content modal-share-content">
            <div class="col-md-12 modal-header">
                <h4 class="title-modal-collection">Thêm vào bộ sưu tập<span id="close-add-collection" class="close">&times;</span></h4>
            </div>
            <div class="col-md-12 modal-body">
                <div class="col-md-12">
                    <label class="btn-action-collection" style="float: right">
                        <a id="btn-create-new-collection" class="default-btn min-width-button theme-color">Tạo mới Bộ sưu tập</a>
                    </label>
                </div>
                <div class="col-md-12"  id="modal-body-add-collection">

                </div>
            </div>
        </div>

    </div>
    <div id="modal-create-new-collection" class="modal">
        <!-- Modal content -->
        <div class="row modal-content modal-share-content">
            <div class="col-md-12 modal-header">
                <span id="close-modal-create-new-collection" class="close">&times;</span>
            </div>
            <div class="col-md-12 modal-body comments-form">
                <form id="comment-form" action="#">
                    <label for="name">Tên bộ sưu tập</label>
                    <input type="text" name="collectionName" id="name">
                    <br>
                    <label for="email">Ảnh đại diện</label>
                    <input type="file" name="fileUpload" id="upload-image" value="Nhấp vào đây tải hình" class="upload-collection-image">
                    <input type="hidden" name="coverImage" id="fileUploadedLink">
                    <br />
                    @*<div>Tiến độ: <span id="progress"></span></div>*@
                    <br />
                    <img src="#" id="fileUploadedPreview" onerror="if (this.src != '/recipepress/images/no-image-icon-15.png') this.src = '/recipepress/images/no-image-icon-15.png';" />
                    <br />
                    <br />
                    <input type="submit" value="Tạo">
                </form>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script>
        var authorization = JSON.parse(localStorage.getItem('authorization'));
        if (authorization == null) {
            window.location.href = "/login";
        }
    </script>
    <script src="//static.filestackapi.com/filestack-js/1.x.x/filestack.min.js"></script>
    <script src="~/js/recipeDetail.js"></script>
    <script type="text/javascript" src="/recipepress/js/plugins.min.js"></script>
    <script type="text/javascript" src="/recipepress/js/color-switcher.min.js"></script>
    <script type="text/javascript" src="/recipepress/js/main.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="/recipepress/js/jquery.swipebox.js"></script>
    <script src="/recipepress/js/slick.min.js"></script>
    <script src="~/js/menu-widgets.js"></script>
    <script src="~/js/follow-unfollow-funtion.js"></script>


    <script type="text/javascript">

        var currentString = "vị trí hiện tại của bạn";
        var indexString = "vị trí mặc định trong trang cá nhân của bạn";
                // fetch and render element to html

                const changeHeadername = async () => {
                    var someText = "Công thức chi tiết";
                    $('.main-heading h1').append(document.createTextNode(someText));
                };
                var map, infoWindow, pos, indexPosition;
                let listCheckedIngres = [];
                async function initMap() {
                    var userAddress = (JSON.parse(window.localStorage.getItem("authorization"))).userAddress;
                    var res = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=${userAddress}&key=${GOOGLE_API_KEY}`);
                    var data = await res.json();
                    indexPosition = data.results[0].geometry.location;
                    map = new google.maps.Map(document.getElementById('map'), {
                        center: { lat: 10.762622, lng: 106.660172 },
                        zoom: 15
                    });
                    infoWindow = new google.maps.InfoWindow;
                    marker = new google.maps.Marker;
                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(function (position) {
                            pos = {
                                lat: position.coords.latitude,
                                lng: position.coords.longitude
                            };
                        }, function () {
                            handleLocationError(true, infoWindow, map.getCenter());
                        });
                    } else {
                        handleLocationError(false, infoWindow, map.getCenter());
                    }
                    if ($("input[name='currentPosition']:checked").length > 0) {
                        setPositionMap(pos, currentString);
                    } else {
                        if (indexPosition != null) {
                            setPositionMap(indexPosition, indexString);
                        }
                    }
                };
            function setPositionMap(index, stringPosition) {
                    marker.setPosition(index);
                    marker.setMap(map);
                    infoWindow.setPosition(index);
                    infoWindow.setContent(stringPosition);
                    infoWindow.open(map, marker);
                    map.setCenter(index);
                };
                function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                    infoWindow.setPosition(pos);
                    infoWindow.setContent(browserHasGeolocation ?
                        'Lỗi: Dịch vụ định vị xảy ra lỗi' :
                        'Lỗi: Trình duyệt của bạn không hỗ trợ định vị');
                    infoWindow.open(map);
                };
                (async () => {
                    // Init elements
                    await changeHeadername();
                    await callSuggestRecipeApi();
                    await callPopularRecipeWidgetApi();
                    await callLatestRecipeWidgetApi();
                    await callListCategoryItem();
                    await RedirectAPI();
                    var res = await fetch(`${BASE_API_URL}/${RECIPE_API_URL}/read-recipeid?recipeId=${@(RouteData.Values["recipe_id"])}`);
                    var data = (await res.json());
                    if (data.length == 0) {
                        $("#error").css("display", "block");
                        $("#content").css("display", "none");
                        return;
                    }
                    await callRecipeDetailApi(@(RouteData.Values["recipe_id"]));

                    
                    await callStepOfRecipeApi(@(RouteData.Values["recipe_id"]));
                    await callChefRecipeApi(@(RouteData.Values["recipe_id"]));
                    


                    $('.slider-detail2').slick({
                        autoplay: true,
                        infinite: true,
                        pauseOnHover: true,
                        prevArrow: $('.left-arrow'),
                        nextArrow: $('.right-arrow')
                    });
                    $('dl.accordion dt').on("click", function () {
                        $(this).siblings('dt').removeClass('current');
                        $(this).addClass('current').next('dd').stop(true, true).slideDown(500).siblings('dd').stop(true, true).slideUp(500);
                    });
                })();

                $("#btn-suggest-ingredients").on("click", function (e) {
                    setMapOnAll(null);
                    if ($("input[name=ori-ingredient]:checked").length > 0) {
                        getCheckedIngredient();
                        listCheckedIngres = [];
                        $("input[name=ori-ingredient]:checked").each(function () {
                            listCheckedIngres.push(this.value.split("-")[1]);
                        });
                        if ($("input[name='currentPosition']:checked").length > 0) {
                            callReadListIngredientNearByStoresApi(pos.lat, pos.lng, listCheckedIngres);
                        }
                        else {
                            callReadListIngredientNearByStoresApi(indexPosition.lat, indexPosition.lng, listCheckedIngres);
                        }
                    } else {
                        callReadProductByIngredientNameApi();
                    }
                    $("#modal-suggest-ingredients").css("display", "block")

                });

                $("#close-modal-suggest").on("click", function (e) {
                    $("#modal-suggest-ingredients").css("display", "none");

                });
                $("#btn-share-recipe").on("click", function (e) {
                    callShareRecipeModalApi(@(RouteData.Values["recipe_id"]));
                    $("#modal-share-recipe").css("display", "block")

                });
                $("#close-share-recipe").on("click", function (e) {
                    $("#modal-share-recipe").css("display", "none")

                });
                $("#btn-add-collection").on("click", function (e) {
                    callReadCollectionModalApi();
                     $("#modal-add-collection").css("display", "block")

                });
                $("#close-add-collection").on("click", function (e) {
                    $("#modal-add-collection").css("display", "none")

                });
                // When the user clicks anywhere outside of the modal, close it
                

                function filterIngredients() {
                    var input, filter, ul, li, a, i, txtValue;
                    input = document.getElementById("filter-ingredient");
                    filter = input.value.toUpperCase();
                    ul = document.getElementById("modal-list-item");
                    li = ul.getElementsByTagName("li");
                    for (i = 0; i < li.length; i++) {
                        a = li[i];
                        txtValue = a.textContent || a.innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            li[i].style.display = "";
                        } else {
                            li[i].style.display = "none";
                        }
                    }
                };
                var star;
                $("input[name='currentPosition']").on("click", function (e) {
                    if ($("input[name='currentPosition']:checked").length > 0) {
                        setPositionMap(pos, currentString);
                        callReadListIngredientNearByStoresApi(pos.lat, pos.lng, listCheckedIngres);
                    }
                    else {
                        setPositionMap(indexPosition, indexString);
                        callReadListIngredientNearByStoresApi(indexPosition.lat, indexPosition.lng, listCheckedIngres);
                    }

                });
                $("input[name='rating']").on("click", function (e) {
                    star = parseFloat(e.target.value);

                });
                $(".submit-comment").on("click", function () {
                    var comment = $("textarea[name='comment']").val();
                    callCreateRatingRecipe2Api(@(RouteData.Values["recipe_id"]), star, comment);
                });
                async function toggleLikeButton(x) {
                    try {
                        var token = JSON.parse(localStorage.getItem('authorization')).token;
                        var recipeId = @(RouteData.Values["recipe_id"]);
                        var res = await fetch(`${BASE_API_URL}/${USER_REACTION_RECIPE_API_URL}/like?recipeId=${recipeId}`, {
                            method: 'get',
                            headers: {
                                'Content-Type': 'application/json',
                                'Authorization': `Bearer ${token}`
                            },
                        });
                        var data = await res.json();
                        if (data.isLike) {
                            x.classList.add("fa-heart");
                            //them data vao firebase
                            //thông báo
                            var chefUsername = window.localStorage.getItem("chefusername");//chủ sở hữu recipe
                            var usernameLocal = window.localStorage.getItem("username");//người đang like
                            if (chefUsername == usernameLocal) {
                                //do nothing
                            } else {
                                //đọc full name
                                var resUser = await fetch(`${BASE_API_URL}/api/account/read-userinfo`, {
                                    method: "GET",
                                    headers: {
                                        'Content-Type': 'application/json',
                                        'Authorization': `Bearer ${token}`
                                    }
                                });
                                var userData = await resUser.json();

                                var myDataRef = SRSN.FIREBASE_DATABASE.ref(chefUsername);
                                var uid = myDataRef.push({
                                    "uid": "",
                                    "username": userData.lastName + " " + userData.firstName,
                                    "content": "đã thích Công Thức của bạn.",
                                    "date": new Date().toLocaleString(),
                                    "link": "/recipe/" + data.recipeId,
                                    "isRead": "False"
                                });
                                //update uid into firebase
                                SRSN.FIREBASE_DATABASE.ref("/" + chefUsername + "/" + uid.key).update({
                                    uid: uid.key
                                });
                                //update count notifi
                                var countNoti = 0;
                                var countDataRef = SRSN.FIREBASE_DATABASE.ref(chefUsername);

                                countDataRef.once('value', function (snapshot) {
                                    countNoti = snapshot.val().numberOfLatestNotis;
                                    countNoti++;
                                    SRSN.FIREBASE_DATABASE.ref(chefUsername).update({ "numberOfLatestNotis": countNoti });
                                });

                            }
                        }
                        else {
                            x.classList.remove("fa-heart");
                        }
                    } catch (e) {
                        alert("Like không thành công")

                    }
                }

                callIsLikeRecipe(@(RouteData.Values["recipe_id"]));

                //var textarea = document.querySelector('.textarea-caption');
                //textarea.addEventListener('keydown', autosize);

                function autosize() {
                    var el = this;
                    setTimeout(function () {
                        el.style.cssText = 'height:auto; padding:0';
                        // for box-sizing other than "content-box" use:
                        // el.style.cssText = '-moz-box-sizing:content-box';
                        el.style.cssText = 'height:' + el.scrollHeight + 'px';
                    }, 0);
                }
        $("#btn-create-new-collection").on("click", function (e) {
            $("#modal-create-new-collection").css("display", "block");
        });

        $("#close-modal-create-new-collection").on("click", function (e) {
            $("#modal-create-new-collection").css("display", "none");

        });
        window.onclick = function (event) {
            if (event.target.id == "modal-create-new-collection") {
                $("#modal-create-new-collection").css("display", "none");
            }
        };
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBzgvkqSdA28vGw5qvqgJdPp-3_8YEBzFo&callback=initMap">
    </script>
    <script type="text/javascript" async defer>
                  // This function will loop 30s if user browse enough 30s
                // call api and let server take care about the user view behavior
                var verifyUserInterestingCounter = 0;
                var verifyUserInteresting = setInterval(function () {
                    ++verifyUserInterestingCounter;
                    console.log(`Verify at ${verifyUserInterestingCounter}`);
                    if (verifyUserInterestingCounter === 30) {
                        console.log(`Verify at Done`);
                        verifyUserInterestingCleaner();
                        var recipeId = @(RouteData.Values["recipe_id"]);
                        callGetViewRecipe(recipeId);
                    }

                }, 1000);
                var verifyUserInterestingCleaner = function () {
                    clearInterval(verifyUserInteresting);
        }
        window.onclick = function (event) {
            if (event.target.id == "modal-suggest-ingredients") {
                $("#modal-suggest-ingredients").css("display", "none");
            }
            if (event.target.id == "modal-share-recipe") {
                $("#modal-share-recipe").css("display", "none");
            }
            if (event.target.id == "modal-add-collection") {
                $("#modal-add-collection").css("display", "none");
            }
            if (event.target.className == 'modal-product-item') {
                listCheckedIngres = [];
                $("input[name=ingredient]:checked").each(function () {
                    listCheckedIngres.push(this.value);
                });
                if ($("input[name='currentPosition']:checked").length > 0) {
                    callReadListIngredientNearByStoresApi(pos.lat, pos.lng, listCheckedIngres);
                }
                else {
                    callReadListIngredientNearByStoresApi(indexPosition.lat, indexPosition.lng, listCheckedIngres);
                }
                //var current = event.target;
                //var ingredientName = current.getAttribute('data-product-name');
                //callReadNearByStoresApi(pos.lat, pos.lng, ingredientName);
            }
        }
    </script>
    <script type="text/javascript" src="~/recipepress/js/pagination.js"></script>
    <script src="~/js/recipe.js"></script>
    <script src="~/js/user-report.js"></script>
}
@*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>*@
